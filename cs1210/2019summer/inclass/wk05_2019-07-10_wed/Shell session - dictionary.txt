3.7.1 (v3.7.1:260ec2c36a, Oct 20 2018, 03:13:28) 
[Clang 6.0 (clang-600.0.57)]
Python Type "help", "copyright", "credits" or "license" for more information.
# Dictionaries

ages = {'sean':26, 'rebekah':32, 'connor':19}

type(ages)
<class 'dict'>

ages
{'sean': 26, 'rebekah': 32, 'connor': 19}

print(ages)
{'sean': 26, 'rebekah': 32, 'connor': 19}

len(ages)
3

ages['rebekah']
32

# Change the value for key 'sean'
ages['sean'] += 1

ages
{'sean': 27, 'rebekah': 32, 'connor': 19}

# Add key 'grace' with value 23
ages['grace'] = 23

ages
{'sean': 27, 'rebekah': 32, 'connor': 19, 'grace': 23}

ages['grace'] = 21

ages
{'sean': 27, 'rebekah': 32, 'connor': 19, 'grace': 21}

# Some Dictionary Methods

# keys()
list(ages.keys())
['sean', 'rebekah', 'connor', 'grace']


# values()
list(ages.values())
[27, 32, 19, 21]

# items()
list(ages.items())
[('sean', 27), ('rebekah', 32), ('connor', 19), ('grace', 21)]

# iterating over a dictionary

for k in ages:
    print(k)

sean
rebekah
connor
grace

for item in ages.items():
    print(item)

('sean', 27)
('rebekah', 32)
('connor', 19)
('grace', 21)

for k,v in ages.items():
    print(f'key = {k} and value = {v}')

key = sean and value = 27
key = rebekah and value = 32
key = connor and value = 19
key = grace and value = 21

for k, v in ages.items():
    print(k, v)

sean 27
rebekah 32
connor 19
grace 21

for k in ages:
    print(k, ages[k])

sean 27
rebekah 32
connor 19
grace 21

# More dictionary methods

# get(key)
ages.get('rebekah')
32

# get is similar to []
ages['rebekah']
32

# The difference is when the key isn't in the dictionary
# This doesn't give an error
ages.get('molly')

# it returns the value None
print(ages.get('molly'))
None

# Doing ages['molly'] would generate an error

# get with default value
ages.get('rebekah', -1)
32

ages.get('molly', -1)
-1


# key in dict

'rebekah' in ages
True

# key not in dict
'rebekah' not in ages
False

ages
{'sean': 27, 'rebekah': 32, 'connor': 19, 'grace': 21}

# remove item from dict
del ages['connor']

ages
{'sean': 27, 'rebekah': 32, 'grace': 21}

del ages['molly']
Traceback (most recent call last):
  Python Shell, prompt 45, line 1
builtins.KeyError: 'molly'

# Using zip to create dictionary

D = dict()

len(D)
0

L = [('red', 10), ('green', 33), ('blue', 200)]

L
[('red', 10), ('green', 33), ('blue', 200)]

D = dict(L)

D
{'red': 10, 'green': 33, 'blue': 200}

keyL = ['red', 'green', 'blue']

valuesL = [10, 33, 200]

D = dict(zip(keyL, valuesL))

D
{'red': 10, 'green': 33, 'blue': 200}
